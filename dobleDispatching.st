Object subclass: #Elemento	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'dobleDispatching'!!Elemento methodsFor: 'as yet unclassified' stamp: 'agustin 5/23/2020 00:47'!jugarCon: otroMovimiento	self subclassResponsibility! !Elemento subclass: #ElementoPapel	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'dobleDispatching'!!ElementoPapel methodsFor: 'as yet unclassified' stamp: 'agustin 5/23/2020 00:52'!jugadaConPapel	^ 'Empate'! !!ElementoPapel methodsFor: 'as yet unclassified' stamp: 'agustin 5/23/2020 01:17'!jugarCon: otroMovimiento	^ otroMovimiento jugadaConPapel! !!ElementoPapel methodsFor: 'as yet unclassified' stamp: 'agustin 5/23/2020 00:52'!jugadaConPiedra 	^ 'Gano'! !!ElementoPapel methodsFor: 'as yet unclassified' stamp: 'agustin 5/23/2020 00:50'!jugadaConTijera	^ 'Pierdo'! !Elemento subclass: #ElementoPiedra	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'dobleDispatching'!!ElementoPiedra methodsFor: 'as yet unclassified' stamp: 'agustin 5/23/2020 01:19'!jugadaConPiedra	^ 'Empate'! !!ElementoPiedra methodsFor: 'as yet unclassified' stamp: 'agustin 5/23/2020 01:24'!jugarCon: otroMovimiento	^ otroMovimiento jugadaConPiedra! !!ElementoPiedra methodsFor: 'as yet unclassified' stamp: 'agustin 5/23/2020 00:52'!jugadaConPapel	^ 'Pierdo'! !!ElementoPiedra methodsFor: 'as yet unclassified' stamp: 'agustin 5/23/2020 00:52'!jugadaConTijera	^ 'Gane'! !Elemento subclass: #ElementoTijera	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'dobleDispatching'!!ElementoTijera methodsFor: 'as yet unclassified' stamp: 'agustin 5/23/2020 00:54'!jugadaConPiedra	^ 'Pierdo'! !!ElementoTijera methodsFor: 'as yet unclassified' stamp: 'agustin 5/23/2020 01:24'!jugarCon: otroMovimiento	^ otroMovimiento jugadaConTijera! !!ElementoTijera methodsFor: 'as yet unclassified' stamp: 'agustin 5/23/2020 00:54'!jugadaConPapel 	^ 'Gano'! !!ElementoTijera methodsFor: 'as yet unclassified' stamp: 'agustin 5/23/2020 00:54'!jugadaConTijera	^ 'Empato'! !Object subclass: #Jugador	instanceVariableNames: 'nombre elemento'	classVariableNames: ''	poolDictionaries: ''	category: 'dobleDispatching'!!Jugador methodsFor: 'accessing' stamp: 'agustin 5/23/2020 01:35'!nombre	^ nombre! !!Jugador methodsFor: 'accessing' stamp: 'agustin 5/23/2020 00:43'!elemento: unElemento	elemento := unElemento! !!Jugador methodsFor: 'accessing' stamp: 'agustin 5/23/2020 00:43'!elemento	^ elemento! !!Jugador methodsFor: 'initialization' stamp: 'agustin 5/23/2020 01:14'!initializeConNombre: unNombre elemento: unElemento	nombre := unNombre.	elemento := unElemento! !!Jugador methodsFor: 'as yet unclassified' stamp: 'agustin 5/23/2020 01:37'!competirConAdversario: unAdversario		| resultado |		resultado := elemento jugarCon: unAdversario elemento.	unAdversario mostrarResultado: resultado.		^ resultado! !!Jugador methodsFor: 'as yet unclassified' stamp: 'agustin 5/23/2020 01:38'!mostrarResultado: resultado	Transcript show: 'nombre: '.	Transcript show: nombre.	Transcript show: ' Resultado: '.	Transcript show: resultado ; cr! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Jugador class	instanceVariableNames: ''!!Jugador class methodsFor: 'as yet unclassified' stamp: 'agustin 5/23/2020 01:06'!nuevoConNombre: unNombre elemento: unElemento	^ self new initializeConNombre: unNombre elemento: unElemento! !TestCase subclass: #JugadorTest	instanceVariableNames: 'unJugador unAdversario otroAdversario'	classVariableNames: ''	poolDictionaries: ''	category: 'dobleDispatching'!!JugadorTest methodsFor: 'as yet unclassified' stamp: 'agustin 5/23/2020 01:27'!testCompetirConAdversarioself assert: (unJugador competirConAdversario: unAdversario) equals: 'Pierdo'. self assert: (unJugador competirConAdversario: otroAdversario) equals: 'Gano'. ! !!JugadorTest methodsFor: 'running' stamp: 'agustin 5/23/2020 01:16'!setUp	"Hooks that subclasses may override to define the fixture of test."unJugador      := Jugador nuevoConNombre: 'Agustin'   elemento: ElementoPiedra new.unAdversario   := Jugador nuevoConNombre: 'Pikin'     elemento: ElementoTijera new.otroAdversario := Jugador nuevoConNombre: 'Covi'      elemento: ElementoPapel new.	! !